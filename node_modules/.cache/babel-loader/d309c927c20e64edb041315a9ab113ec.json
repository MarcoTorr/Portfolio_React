{"ast":null,"code":"var _jsxFileName = \"/Users/ijtsiramos/Desktop/bootcamp/HW react-portafolio/src/pages/contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ContactForm(props) {\n  _s();\n\n  const [input, setInput] = useState('');\n  let [eagerness, setEagerness] = useState('');\n  const eagernessLevel = ['high', 'medium', 'low'];\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!eagerness) {\n      eagerness = 'low';\n    }\n\n    props.onSubmit({\n      id: Math.random(Math.floor() * 1000),\n      text: input,\n      eagerness: eagerness\n    });\n    setInput('');\n    setEagerness('');\n  };\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  }; // First we check to see if \"edit\" prop exists. If not, we render the normal form\n  // If the prop \"edit\" exists, we know to render the update form instead\n\n\n  return !props.edit ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"contact-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: input,\n        name: \"text\",\n        className: \"contact-input\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `dropbtn ${eagerness}`,\n          children: eagerness || 'Priority'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: () => setEagerness(eagernessLevel[0]),\n            children: \"Must do\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: () => setEagerness(eagernessLevel[1]),\n            children: \"Want to do\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: () => setEagerness(eagernessLevel[2]),\n            children: \"Take it or leave it\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"contact-button\",\n        children: \"Add bucket list item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Update entry: \", props.edit.value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"contact-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: props.edit.value,\n        value: input,\n        name: \"text\",\n        className: \"contact-input\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `dropbtn ${eagerness}`,\n          children: eagerness || 'Priority'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: () => setEagerness(eagernessLevel[0]),\n            children: \"Must do\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: () => setEagerness(eagernessLevel[1]),\n            children: \"Want to do\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: () => setEagerness(eagernessLevel[2]),\n            children: \"Take it or leave it\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"contact-button\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContactForm, \"nwHPLFymi7tEsQOgbnk7HMr7KLg=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/ijtsiramos/Desktop/bootcamp/HW react-portafolio/src/pages/contact.js"],"names":["React","useState","styled","createGlobalStyle","ContactForm","props","input","setInput","eagerness","setEagerness","eagernessLevel","handleSubmit","e","preventDefault","onSubmit","id","Math","random","floor","text","handleChange","target","value","edit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled, { createGlobalStyle } from \"styled-components\";\n\nfunction ContactForm(props) {\n  const [input, setInput] = useState('');\n  let [eagerness, setEagerness] = useState('');\n\n  const eagernessLevel = ['high', 'medium', 'low']\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!eagerness) {\n      eagerness = 'low';\n    }\n\n    props.onSubmit({\n      id: Math.random(Math.floor() * 1000),\n      text: input,\n      eagerness: eagerness,\n    });\n\n    setInput('');\n    setEagerness('');\n  };\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  // First we check to see if \"edit\" prop exists. If not, we render the normal form\n  // If the prop \"edit\" exists, we know to render the update form instead\n  return !props.edit ? (\n    <div>\n      <form className=\"contact-form\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          value={input}\n          name=\"text\"\n          className=\"contact-input\"\n          onChange={handleChange}\n        ></input>\n        <div className=\"dropdown\">\n          <button className={`dropbtn ${eagerness}`}>\n            {eagerness || 'Priority'}\n          </button>\n          <div className=\"dropdown-content\">\n            <p onClick={() => setEagerness(eagernessLevel[0])}>Must do</p>\n            <p onClick={() => setEagerness(eagernessLevel[1])}>Want to do</p>\n            <p onClick={() => setEagerness(eagernessLevel[2])}>Take it or leave it</p>\n          </div>\n        </div>\n        <button className=\"contact-button\">Add bucket list item</button>\n      </form>\n    </div>\n  ) : (\n    <div>\n      <h3>Update entry: {props.edit.value}</h3>\n      <form className=\"contact-form\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder={props.edit.value}\n          value={input}\n          name=\"text\"\n          className=\"contact-input\"\n          onChange={handleChange}\n        ></input>\n        <div className=\"dropdown\">\n          <button className={`dropbtn ${eagerness}`}>\n            {eagerness || 'Priority'}\n          </button>\n          <div className=\"dropdown-content\">\n            <p onClick={() => setEagerness(eagernessLevel[0])}>Must do</p>\n            <p onClick={() => setEagerness(eagernessLevel[1])}>Want to do</p>\n            <p onClick={() => setEagerness(eagernessLevel[2])}>Take it or leave it</p>\n          </div>\n        </div>\n        <button className=\"contact-button\">Update</button>\n      </form>\n    </div>\n  );\n}\n\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}
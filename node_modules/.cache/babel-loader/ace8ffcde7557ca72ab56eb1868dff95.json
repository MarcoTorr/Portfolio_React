{"ast":null,"code":"var _jsxFileName = \"/Users/ijtsiramos/Desktop/bootcamp/HW react-portafolio/src/pages/contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport { Form, Button, FloatingLabel } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ContactForm(props) {\n  _s();\n\n  const [input, setInput] = useState('');\n  let [eagerness, setEagerness] = useState('');\n  const eagernessLevel = ['high', 'medium', 'low'];\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!eagerness) {\n      eagerness = 'low';\n    }\n\n    props.onSubmit({\n      id: Math.random(Math.floor() * 1000),\n      text: input,\n      eagerness: eagerness\n    });\n    setInput('');\n    setEagerness('');\n  };\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  }; // First we check to see if \"edit\" prop exists. If not, we render the normal form\n  // If the prop \"edit\" exists, we know to render the update form instead\n\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    style: {\n      marginTop: '70px',\n      marginBottom: '80px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"exampleForm.ControlInput1\",\n        children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          controlId: \"floatingInput\",\n          label: \"Enter your full name\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"First and Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"exampleForm.ControlInput2\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"name@example.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"exampleForm.ControlTextarea1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContactForm, \"nwHPLFymi7tEsQOgbnk7HMr7KLg=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/ijtsiramos/Desktop/bootcamp/HW react-portafolio/src/pages/contact.js"],"names":["React","useState","styled","createGlobalStyle","Form","Button","FloatingLabel","ContactForm","props","input","setInput","eagerness","setEagerness","eagernessLevel","handleSubmit","e","preventDefault","onSubmit","id","Math","random","floor","text","handleChange","target","value","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport {Form, Button, FloatingLabel} from 'react-bootstrap';\n\n\nfunction ContactForm(props) {\n  const [input, setInput] = useState('');\n  let [eagerness, setEagerness] = useState('');\n\n  const eagernessLevel = ['high', 'medium', 'low']\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!eagerness) {\n      eagerness = 'low';\n\n    }\n\n    props.onSubmit({\n      id: Math.random(Math.floor() * 1000),\n      text: input,\n      eagerness: eagerness,\n    });\n\n    setInput('');\n    setEagerness('');\n  };\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  // First we check to see if \"edit\" prop exists. If not, we render the normal form\n  // If the prop \"edit\" exists, we know to render the update form instead\n  return (\n    <section style={{marginTop: '70px',marginBottom: '80px'}}>\n        <Form>\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n        <FloatingLabel\n          controlId=\"floatingInput\"\n          label=\"Enter your full name\"\n          className=\"mb-3\"\n        >\n        <Form.Control type=\"email\" placeholder=\"First and Last Name\" />\n        </FloatingLabel>\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput2\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"name@example.com\" />\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n        <Form.Label>Message</Form.Label>\n        <Form.Control as=\"textarea\" rows={3} />\n      </Form.Group>\n    </Form>\n    <Button>Submit</Button>\n    </section>\n  );\n}\n\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}